
@model Models.Goods
@*<% @Page Language="C#" Debug="true"%>*@
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("Create","Goods",FormMethod.Post)) 
{
    @Html.AntiForgeryToken()


    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", style = "width:50%;" } })
    <div class="form-horizontal">
        <h4>Goods</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Season, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Season, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Season, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Material, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Material, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Material, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Style, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Style, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Style, "", new { @class = "text-danger" })
            </div>
        </div>

       @*<div class="form-group">
            @Html.LabelFor(model => model.GoodsImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GoodsImage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GoodsImage, "", new { @class = "text-danger" })
                
            </div>
        </div>*@
@using (Html.BeginForm("Create", "Goods", FormMethod.Post, new { @class = "PostSendForm", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @*<script id="container" name="content" type="text/plain">
    </script>*@
    <input name="name" style="height:20px;width:40px;" />
    <input name="sex" style="height:20px;width:40px;" />
    <input name="season"style="height:20px;width:40px;" />
    <input name="material" style="height:20px;width:40px;" />
    <input name="type" style="height:20px;width:40px;" />
    <img id="imgpre" src="~/Images/yichu/上传图片(1).png" style="height:200px;width:200px;" alt="Image preview...">
        <input type="file" id="imgFile" name="imgfile" onchange="previewFile()">
        <button type="submit">上传</button>
}
        @*<div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Unitprice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Unitprice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Unitprice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SizeImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SizeImage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SizeImage, "", new { @class = "text-danger" })
            </div>
        </div>

       <div class="form-group">
            @Html.LabelFor(model => model.ShangjiaTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShangjiaTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShangjiaTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pageview, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pageview, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pageview, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalStorageAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalStorageAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalStorageAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ThumbNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ThumbNum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ThumbNum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>*@
   </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    function previewFile() {
        var preview = document.getElementById('imgpre')
        var fileDom = document.querySelector('input[type=file]')
        // 获取得到file 对象
        var file = fileDom.files[0]
        // 限制上传图片的大小
        if (file.size > 1024 * 1024 * 2) {
            alert('图片大小不能超过 2MB!');
            return false;
        }
        // 创建url
        var imgUrl = window.URL.createObjectURL(file)
        preview.setAttribute("src", imgUrl)
        // 更改img url 以后释放 url
        preview.onload = function () {
            // console.log('图片加载成功')
            URL.revokeObjectURL(imgUrl)
        }
    }
</script>